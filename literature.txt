A paper in graph theory:

[1] Precomputes a data structure so that if a particular vertex fails, you can query a path that is at most t times the length of the shortest path. I'm not sure if they mean the shortest path before the vertex failed, or after.

    Limitations:
     - graph must be undirected and unweighted
     - can only handle one failed vertex per query; otherwise it might have been useful to incorporate into my algorithm


A paper in network routing:

[2] Instead of using a distance metric between paths, defines an asymmetric diversity measure D(P,Q) of a new path P with respect to an existing path Q: the fraction of Q's nodes and edges not present in P. When a path P is added to the set, the set's aggregate diversity increases by the min(D(P,Q)) over all Q already in the set.
    A two phase algorithm tries in phase 1 to find the set of k pairwise disjoint paths (i.e., no edges or nodes in common anywhere) such that the sum total of the lengths is shortest. If it can only find less than k paths, it proceeds in phase 2 to add paths in descending order of diversity until there are k paths total.
    A path set is evaluated for flow robustness by causing nodes/edges to fail with some probability and asking whether at least one path remains open.

    Limitations:
     - if all paths that satisfy a particular query happen to pass through the same node/edge, phase 1 can return only the shortest path, and phase 2 proceeds without regard for path length; this ought to be uncommon in a good network topology, but may be common in other applications
     - a primary intention was to use this as an approximate measure of the robustness of the whole graph, so the point of the algorithm is to come up with the best path set permitted by the graph and measure how good it is; I am interested in a cheap way to get a good enough set
     - graph is not embedded in a space; as such, the process does not find paths which are spatially diverse


A paper in motion planning:

[3] Given a large set of paths, finds a subset of size k with high diversity. Diversity of a set is the minimum distance between any two paths (like mine), where distance is a discrete approximation of the area between the paths (not like mine). Algorithm starts with the shortest path and greedily adds paths such that the diversity remains as high as possible after each addition (does not yield the set with optimal diversity because of the greediness).

    Limitations:
     - does not work from a roadmap-like graph, but rather from a tree constructed from motions in a state space
     - searches through the tree k-1 times looking for the next best path to add, which is not a feasible strategy to apply in my case because my graph implicitly defines a set of paths much much larger than their trees


[1] http://link.springer.com/article/10.1007%2Fs00453-012-9621-y
[2] http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5339988
[3] http://link.springer.com/chapter/10.1007%2F978-3-642-14743-2_24
